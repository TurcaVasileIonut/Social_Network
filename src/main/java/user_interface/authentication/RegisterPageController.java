package user_interface.authentication;

import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.stage.Stage;
import service.Services;
import user_interface.BaseController;
import user_interface.NotificationPopups;
import user_interface.scene_changer.HomepageSceneChanger;
import user_interface.scene_changer.LoginRegisterSceneChanger;

import java.util.Objects;

public class RegisterPageController extends BaseController {
    @FXML
    private Hyperlink hyperlinkRegister;
    @FXML
    private Button buttonRegister;
    @FXML
    private TextField email;
    @FXML
    private TextField firstname;
    @FXML
    private TextField lastname;
    @FXML
    private TextField username;
    @FXML
    private PasswordField password;
    @FXML
    private PasswordField confirmPassword;
    @FXML
    private ComboBox<String> gender;

    /**
     * Initialize the register page
     */
    public void initialize(){
        gender.getItems().add("Female");
        gender.getItems().add("Male");
        gender.getItems().add("Non-binary");
        gender.getItems().add("I choose not to say");
    }

    /**
     * A method that will handle the event generated by pressing the register button
     */
    @FXML
    protected void registerClick(){
        String firstname = this.firstname.getText();
        String lastname = this.lastname.getText();
        String username = this.username.getText();
        String password = this.password.getText();
        String confirmPassword = this.confirmPassword.getText();
        String email = this.email.getText();
        String gender = this.gender.getValue();

        if(!Objects.equals(password, confirmPassword)) {
            NotificationPopups.errorPopup("Password and Confirm Password fields must have same content! ");
            return;
        }

        try {
            serviceUsers.addUser(username, password, firstname, lastname, email, gender);
            Services services = new Services(serviceUsers, serviceFriendships, serviceMessages);
            HomepageSceneChanger.changeSceneToHomeFeed((Stage) buttonRegister.getScene().getWindow(), username, services);
        }catch (Exception e){
            NotificationPopups.errorPopup(e.getMessage());
        }
    }



    /**
     * A method that will handle the event generated by pressing the login button
     */
    @FXML
    protected void loginClick() throws Exception {
        System.out.println("LoginClick");

        try{
            Services services = new Services(serviceUsers, serviceFriendships, serviceMessages);
            LoginRegisterSceneChanger.changeSceneToLogin((Stage) hyperlinkRegister.getScene().getWindow(), services);
        }catch (Exception e){
            NotificationPopups.errorPopup(e.getMessage());
        }

    }
}
